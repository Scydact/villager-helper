{"version":3,"sources":["logo.svg","webpack:///./src/logo.svg?515f","Utils.js","VillagerObject.js","App.js","serviceWorker.js","index.js"],"names":["createId","Math","random","toString","substr","CONSTANTS","MAX_VALUE","BYTE","SHORT","INT","LONG","MIN_VALUE","toTitleCase","s","split","map","x","charAt","toUpperCase","slice","join","versions","md","pc","mdlast","length","findItemInfo","str","id","splice","findItemOrBlockByName","window","mi","VILLAGER","professions","biomes","getVillagerImagePath","biome","profession","b","p","Villager","entity","customName","level","xp","isXpRelatedToLevel","type","offers","recipe","index","this","newOffers","filter","indexOf","uuid","oldRecipe","newRecipe","oldIdx","Recipe","extraData","rewardExp","maxUses","uses","priceMultiplier","specialPrice","demand","trades","buy","Item","buyB","sell","Object","assign","clone","count","tag","App","props","handleChangeVillager","event","key","target","name","value","parseInt","setState","state","villager","offersFunctionCollection","addRecipe","i","selectedRecipe","undefined","newSelect","vo","refreshRecipe","cloneRecipe","sr","setSelectedRecipe","moveRecipe","direction","moveRecipeUp","moveRecipeDown","removeRecipe","oldIndex","recipeFunctionCollection","extraDataChangeHandler","console","log","checked","parseFloat","originalRecipe","modifiedRecipe","updateRecipe","itemChangeHandler","propName","buyChangeHandler","buyBChangeHandler","sellChangeHandler","app","className","MenuBar","data","onChange","functionCollection","selectedItem","RecipeInfo","React","Component","VillagerInfo","src","alt","y","RecipeThumb","onClick","ItemIcon","itemId","itemCount","OffersInfo","createList","c","ItemInfo","data-tip","data-for","item_icon","displayName","findItemIcon","item_elem","item_count","placeholder","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.27836934.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"#61DAFB\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 420.9,\n  cy: 296.5,\n  r: 45.7\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M520.5 78.1z\"\n}));\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";\nexport { ForwardRef as ReactComponent };","import * as mi from 'minecraft-items';\r\nimport * as md from 'minecraft-data';\r\n\r\nexport function createId() {\r\n    // Math.random should be unique because of its seeding algorithm.\r\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n    // after the decimal.\r\n    // Source: https://gist.github.com/gordonbrander/2230317\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nexport const CONSTANTS = {\r\n    MAX_VALUE: {\r\n        BYTE: (2 ** 7) - 1,\r\n        SHORT: (2 ** 15) - 1,\r\n        INT: (2 ** 31) - 1,\r\n        LONG: (2 ** 63) - 1,\r\n    },\r\n    MIN_VALUE: {\r\n        BYTE: -(2 ** 7),\r\n        SHORT: -(2 ** 15),\r\n        INT: -(2 ** 31),\r\n        LONG: -(2 ** 63),\r\n    }\r\n}\r\n\r\nexport function toTitleCase(s) {\r\n    if (typeof s !== 'string') return '';\r\n    return s.split(' ')\r\n        .map(x => x.charAt(0).toUpperCase() + x.slice(1))\r\n        .join(' ');\r\n}\r\n\r\nlet versions = md.supportedVersions.pc;\r\nlet mdlast = md(versions[versions.length-1]);\r\n\r\n/** Finds item data from minecraft-data module. */\r\nexport function findItemInfo(str) {\r\n    let id = str.split(':').splice(-1);\r\n    return mdlast.findItemOrBlockByName(id);\r\n}\r\n/** Finds an item icon by its display name */\r\nexport function findItemIcon(name, isDisplayName = false) {\r\n    if (!isDisplayName) {\r\n        let x = findItemInfo(name);\r\n        name = x ? x.displayName : name;\r\n    }\r\n    let x = mi.get(name);\r\n    return (x) ? x['icon'] : null;\r\n}\r\nexport function findDisplayName(str) {\r\n\r\n}\r\n\r\n\r\nwindow.mi = mi;\r\nwindow.md = md;\r\nwindow.mdlast = mdlast;","import { CONSTANTS, createId, toTitleCase } from \"./Utils\";\r\n\r\nlet villagerObject = {\r\n    entity: {\r\n        customName: '',\r\n        level: 3,\r\n        xp: 250,\r\n        isXpRelatedToLevel: true,\r\n        profession: 'minecraft:something',\r\n        type: 'minecraft:something_else',\r\n    },\r\n    offers: [\r\n        {\r\n            // a trade option\r\n            rewardExp: true,\r\n            maxUses: 39029302,\r\n            uses: 0,\r\n            buy: { Count: 64, id: \"diamond\", tag: {} },\r\n            buyB: null,\r\n            sell: { Count: 1, id: \"dirt\", tag: {} },\r\n\r\n            xp: 892, //xp that the villager gets\r\n            priceMultiplier: 0, //multiplier of 'demand'\r\n            specialPrice: 0, //special modifier\r\n            demand: 0, // maybe ignore all these values if 0.\r\n        }\r\n    ]\r\n}\r\n\r\nexport const VILLAGER = {\r\n    professions: [\r\n        'armorer',\r\n        'butcher',\r\n        'cartographer',\r\n        'cleric',\r\n        'farmer',\r\n        'fisherman',\r\n        'fletcher',\r\n        'leatherworker',\r\n        'librarian',\r\n        'nitwit',\r\n        'none',\r\n        'mason',\r\n        'shepherd',\r\n        'toolsmith',\r\n        'weaponsmith',\r\n    ],\r\n    biomes: [\r\n        'desert',\r\n        'jungle',\r\n        'plains',\r\n        'savanna',\r\n        'snow',\r\n        'swamp',\r\n        'taiga',\r\n    ],\r\n    getVillagerImagePath: (biome, profession) => {\r\n        let b = (biome === 'snow') ? 'Snowy' : toTitleCase(biome);\r\n        let p = (profession === 'none') ? 'Villager_Base' : toTitleCase(profession);\r\n        return `./assets/villager_pics/${b}_${p}.png`\r\n    },\r\n}\r\n\r\nexport class Villager {\r\n    entity = {\r\n        customName: '',\r\n        level: 5,\r\n        xp: 1000,\r\n        isXpRelatedToLevel: true,\r\n        profession: 'none',\r\n        type: 'plains',\r\n    }\r\n    offers = [];\r\n\r\n    /** Adds the given recipe to the offer list. \r\n     * \r\n     * If an index is given, will insert at that position. */\r\n    addRecipe(recipe, index = this.offers.length) {\r\n        let newOffers = [...this.offers];\r\n        newOffers.splice(index, 0, recipe);\r\n        this.offers = newOffers;\r\n        return recipe;\r\n    }\r\n    /** Removes the given recipe from the offer list. \r\n     * \r\n     * To remove by index, just do RemoveRecipe(offers[idx]) */\r\n    removeRecipe(recipe) {\r\n        this.offers = this.offers.filter((x) => x !== recipe);\r\n        return this.offers;\r\n    }\r\n    /** Moves the given recipe to the given index. \r\n     * \r\n     * Returns true if successful, otherwise false.*/\r\n    moveRecipe(recipe, index) {\r\n        let oldIdx = this.offers.indexOf(recipe);\r\n        if (oldIdx === -1) return false;\r\n\r\n        // index wraparound\r\n        index = (index + this.offers.length) % this.offers.length;\r\n\r\n        let newOffers = this.offers.filter((x) => x !== recipe);\r\n        newOffers.splice(index, 0, recipe);\r\n        this.offers = newOffers;\r\n        return true;\r\n    }\r\n    /** Finds and returns the recipe with the given uuid \r\n     * \r\n     * To find the index, just do offers.indexOf(findRecipe(uuid)) */\r\n    findRecipe(uuid) {\r\n        for (let recipe in this.offers) {\r\n            if (recipe['uuid'] === uuid) return recipe;\r\n        }\r\n        return null;\r\n    }\r\n    /** Updates the old recipe with a new one */\r\n    updateRecipe(oldRecipe, newRecipe) {\r\n        let oldIdx = this.offers.indexOf(oldRecipe);\r\n        if (oldIdx === -1) return false;\r\n\r\n        let newOffers = [...this.offers];\r\n        newOffers[oldIdx] = newRecipe;\r\n        this.offers = newOffers;\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class Recipe {\r\n    uuid = createId(); // used as the key for React lists\r\n\r\n    extraData = {\r\n        rewardExp: false, // if this trade rewards exp to the player\r\n        maxUses: CONSTANTS.MAX_VALUE.INT,\r\n        uses: 0,\r\n\r\n        xp: 0, //xp that the villager gets\r\n        priceMultiplier: 0, //multiplier of 'demand'\r\n        specialPrice: 0, //special modifier\r\n        demand: 0, // maybe ignore all these values if 0.\r\n    }\r\n\r\n    trades = {\r\n        buy: new Item(1,'emerald'),\r\n        buyB: new Item(0,'air'),\r\n        sell: new Item(1,'paper'),\r\n    }\r\n    clone() {\r\n        let x = new Recipe();\r\n\r\n        x.extraData = Object.assign({},this.extraData);\r\n        x.trades = {\r\n            buy: this.trades.buy.clone(),\r\n            buyB: this.trades.buyB.clone(),\r\n            sell: this.trades.sell.clone()\r\n        };\r\n\r\n        return x;\r\n    }\r\n}\r\n\r\nexport class Item {\r\n    uuid = createId(); // used as the key for React lists\r\n\r\n    constructor(count = 1, id = \"stone\", tag = \"\") {\r\n        this.count = count;\r\n        this.id = id;\r\n        this.tag = tag;\r\n    }\r\n    clone() {\r\n        return new Item(this.count, this.id, this.tag);\r\n    }\r\n}","import React, { useState } from 'react';\nimport logo, { ReactComponent } from './logo.svg';\nimport './App.css';\nimport * as vo from './VillagerObject';\nimport { CONSTANTS, findItemIcon, findItemInfo, toTitleCase } from './Utils';\nimport ReactTooltip from 'react-tooltip';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.villager = new vo.Villager();\n        // this.villager.addRecipe(new vo.Recipe());\n        this.state = {\n            entity: this.villager.entity,\n            offers: this.villager.offers,\n            selectedRecipe: null,\n        }\n        window.app = this;\n    }\n\n    handleChangeVillager = (event) => {\n        let key = event.target.name;\n        let value = event.target.value;\n        if (event.target.type === 'number')\n            value = parseInt(value);\n        this.setState({ entity: { ...this.state['entity'], [key]: value } });\n        this.villager.entity = this.state.entity;\n\n    }\n\n    refreshRecipe(newSelect) {\n        this.setState({ selectedRecipe: newSelect, offers: [...this.villager.offers] });\n    }\n\n    offersFunctionCollection = {\n        addRecipe: () => {\n            let i = (this.state.selectedRecipe) ? this.state.offers.indexOf(this.state.selectedRecipe) + 1 : undefined;\n            let newSelect = this.villager.addRecipe(new vo.Recipe(), i);\n            this.refreshRecipe(newSelect);\n        },\n        cloneRecipe: () => {\n            let sr = this.state.selectedRecipe;\n            if (sr == null) return;\n            let i = this.state.offers.indexOf(this.state.selectedRecipe) + 1;\n            let newSelect = this.villager.addRecipe(sr.clone(), i);\n            this.refreshRecipe(newSelect);\n        },\n        setSelectedRecipe: (recipe) => {\n            this.setState({ selectedRecipe: recipe });\n        },\n        moveRecipe: (recipe, direction) => {\n            let i = this.villager.offers.indexOf(recipe);\n            this.villager.moveRecipe(recipe, i + direction);\n            this.setState({ offers: [...this.villager.offers] });\n        },\n        moveRecipeUp: () => {\n            this.offersFunctionCollection.moveRecipe(this.state.selectedRecipe, -1);\n        },\n        moveRecipeDown: () => {\n            this.offersFunctionCollection.moveRecipe(this.state.selectedRecipe, 1);\n        },\n        removeRecipe: () => {\n            let oldIndex = this.villager.offers.indexOf(this.state.selectedRecipe);\n            this.villager.removeRecipe(this.state.selectedRecipe);\n            let newSelect = this.villager.offers[oldIndex - 1] || this.villager.offers[oldIndex] || null;\n            this.refreshRecipe(newSelect);\n        },\n    }\n\n    recipeFunctionCollection = {\n        extraDataChangeHandler: (event) => {\n            let key = event.target.name;\n            let value = event.target.value;\n            console.log(event.target.checked);\n            if (event.target.type === 'number')\n                value = (event.target.name === 'priceMultiplier') ? parseFloat(value) : parseInt(value);\n            if (event.target.type === 'checkbox')\n                value = event.target.checked;\n\n            let originalRecipe = this.state['selectedRecipe'];\n\n            let modifiedRecipe = originalRecipe.clone();\n            modifiedRecipe.extraData[key] = value;\n\n            this.villager.updateRecipe(originalRecipe, modifiedRecipe);\n            this.refreshRecipe(modifiedRecipe);\n        },\n        itemChangeHandler: (event, propName) => {\n            let key = event.target.name;\n            let value = event.target.value;\n            if (event.target.type === 'number')\n                value = parseInt(value);\n\n            let originalRecipe = this.state['selectedRecipe'];\n\n            let modifiedRecipe = originalRecipe.clone();\n            modifiedRecipe.trades[propName][key] = value;\n\n            this.villager.updateRecipe(originalRecipe, modifiedRecipe);\n            this.refreshRecipe(modifiedRecipe);\n        },\n        buyChangeHandler: (event) => this.recipeFunctionCollection.itemChangeHandler(event, 'buy'),\n        buyBChangeHandler: (event) => this.recipeFunctionCollection.itemChangeHandler(event, 'buyB'),\n        sellChangeHandler: (event) => this.recipeFunctionCollection.itemChangeHandler(event, 'sell'),\n        \n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <MenuBar />\n                <div className=\"main\">\n                    <VillagerInfo\n                        data={this.state.entity}\n                        onChange={this.handleChangeVillager}\n                    />\n                    <OffersInfo\n                        data={this.state.offers}\n                        villager={this.villager}\n                        functionCollection={this.offersFunctionCollection}\n                        selectedItem={this.state.selectedRecipe}\n                    />\n                    <RecipeInfo\n                        data={this.state.selectedRecipe}\n                        functionCollection={this.recipeFunctionCollection}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\nfunction MenuBar() {\n    return <div className=\"menu-bar\">{'<Something something>'}</div>\n}\n\nclass VillagerInfo extends React.Component {\n    render() {\n        let data = this.props.data;\n        let onChange = this.props.onChange;\n        return (\n            <div className=\"villager card\">\n                <img\n                    className=\"villager-image\"\n                    src={vo.VILLAGER.getVillagerImagePath(data.type, data.profession)}\n                    alt={`Villager: ${data.type}_${data.profession}`} />\n\n                <div className=\"villager-form form\">\n\n                    <label>Name: </label>\n                    <input\n                        type=\"text\"\n                        value={data.customName}\n                        name=\"customName\"\n                        onChange={onChange} />\n\n                    <label>Profession: </label>\n                    <select\n                        type=\"text\"\n                        value={data.profession}\n                        name=\"profession\"\n                        onChange={onChange}>\n                        {vo.VILLAGER.professions.map(\n                            (x, y) => <option key={y} value={x}>{toTitleCase(x)}</option>\n                        )}\n                    </select>\n\n                    <label>Biome: </label>\n                    <select\n                        type=\"option\"\n                        value={data.type}\n                        name=\"type\"\n                        onChange={onChange}>\n                        {vo.VILLAGER.biomes.map(\n                            (x, y) => <option key={y} value={x}>{toTitleCase(x)}</option>\n                        )}\n                    </select>\n\n                    <label>Level: </label>\n                    <input\n                        type=\"number\"\n                        value={data.level}\n                        name=\"level\"\n                        onChange={onChange} />\n\n                    <label>Xp: </label>\n                    <input\n                        type=\"number\"\n                        value={data.xp}\n                        name=\"xp\"\n                        onChange={onChange} />\n\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction RecipeThumb(props) {\n    /**\n    uuid = createId(); // used as the key for React lists\n\n    extraData = {\n        rewardExp: false, // if this trade rewards exp to the player\n        maxUses: CONSTANTS.MAX_VALUE.INT,\n        uses: 0,\n\n        xp: 0, //xp that the villager gets\n        priceMultiplier: 0, //multiplier of 'demand'\n        specialPrice: 0, //special modifier\n        demand: 0, // maybe ignore all these values if 0.\n    }\n\n    trades = {\n        buy: new Item(),\n        buyB: new Item(0),\n        sell: new Item(),\n    }\n     */\n    return (\n        <li onClick={() => props.onClick(props.data)} className={`item-thumb ${props.className}`}>\n            <ItemIcon itemId={props.data.trades.buy.id} itemCount={props.data.trades.buy.count} />\n            {props.data.trades.buyB.count ? (<span className=\"item-thumb-sign mc-font\">+</span>) : null}\n            {props.data.trades.buyB.count ? (<ItemIcon itemId={props.data.trades.buyB.id} itemCount={props.data.trades.buyB.count} />) : null}\n            <span className=\"item-thumb-sign mc-font\">=</span><ItemIcon itemId={props.data.trades.sell.id} itemCount={props.data.trades.sell.count} />\n            {/* <span>R#{props.data.uuid}</span> */}\n        </li>\n    );\n}\n\nclass OffersInfo extends React.Component {\n\n    createList = () => {\n        return this.props.data.map(\n            (x) => {\n                let c = (x.uuid === this.props.selectedItem.uuid) ? \"active\" : \"\";\n                return <RecipeThumb\n                    key={x.uuid}\n                    data={x}\n                    className={c}\n                    onClick={this.props.functionCollection.setSelectedRecipe}\n                />\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"offers card\">\n                <h1>Offers</h1>\n                <div className=\"offers-list-wrapper\">\n                    <div className=\"offers-btn-wrapper\">\n                        <button onClick={this.props.functionCollection.addRecipe}>+</button>\n                        <button onClick={this.props.functionCollection.cloneRecipe}>C</button>\n                        <button onClick={this.props.functionCollection.removeRecipe}>-</button>\n                        <button onClick={this.props.functionCollection.moveRecipeUp}>▲</button>\n                        <button onClick={this.props.functionCollection.moveRecipeDown}>▼</button>\n                    </div>\n                    <ul className=\"offers-list\">\n                        {this.createList()}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction RecipeInfo(props) {\n    if (props.data == null)\n        return (\n            <div className=\"recipe card\">\n                <h1>Trade</h1>\n                <p>No trade selected.</p>\n            </div>\n        )\n\n    return (\n        <div className=\"recipe card\">\n            <h1>Trade</h1>\n            {/* <p>Trade {props.data.uuid} selected.</p> */}\n\n            <div className=\"item-wrapper card\">\n                <h2>Buy</h2>\n                <ItemInfo\n                    data={props.data.trades.buy}\n                    onChange={props.functionCollection.buyChangeHandler}\n                />\n            </div>\n            <div className=\"item-wrapper card\">\n                <h2>Buy B</h2>\n                <ItemInfo\n                    data={props.data.trades.buyB}\n                    onChange={props.functionCollection.buyBChangeHandler}\n                />\n            </div>\n            <div className=\"item-wrapper card\">\n                <h2>Sell</h2>\n                <ItemInfo\n                    data={props.data.trades.sell}\n                    onChange={props.functionCollection.sellChangeHandler}\n                />\n            </div>\n\n            <div className=\"form card\">\n                <h2 className=\"form-2header\">Extra data</h2>\n                <label data-tip data-for=\"tip-maxuses\">Max Uses: </label>\n                <input\n                    type=\"number\"\n                    value={props.data.extraData.maxUses}\n                    name=\"maxUses\"\n                    onChange={props.onChange} />\n                <ReactTooltip id=\"tip-maxuses\">\n                    The maximum number of times this trade can be used before it is disabled.<br />\n                    Increases by a random amount from 2 to 12 when offers are refreshed.<br />\n                    Set to {CONSTANTS.MAX_VALUE.INT.toString()} (or any other large number) to disable.\n                </ReactTooltip>\n\n                <label data-tip data-for=\"tip-rewardexp\">Reward player XP: </label>\n                <input\n                    type=\"checkbox\"\n                    checked={props.data.extraData.rewardExp}\n                    name=\"rewardExp\"\n                    onChange={props.functionCollection.extraDataChangeHandler} />\n                <ReactTooltip id=\"tip-rewardexp\">\n                    Whether this trade provides XP orb drops.\n                </ReactTooltip>\n\n                <label data-tip data-for=\"tip-xp\">Villager XP: </label>\n                <input\n                    type=\"number\"\n                    value={props.data.extraData.xp}\n                    name=\"xp\"\n                    onChange={props.functionCollection.extraDataChangeHandler} />\n                <ReactTooltip id=\"tip-xp\">\n                    How much experience the villager gets from this trade.\n                </ReactTooltip>\n\n                <label data-tip data-for=\"tip-pricemultiplier\">Price Multiplier: </label>\n                <input\n                    type=\"number\"\n                    value={props.data.extraData.priceMultiplier}\n                    name=\"priceMultiplier\"\n                    onChange={props.functionCollection.extraDataChangeHandler} />\n                <ReactTooltip id=\"tip-pricemultiplier\">\n                    The multiplier on the  demand price adjuster;\n                    the final adjusted price is added to the first 'cost' item's price.\n                </ReactTooltip>\n\n                <label data-tip data-for=\"tip-specialprice\">Special price: </label>\n                <input\n                    type=\"number\"\n                    value={props.data.extraData.specialPrice}\n                    name=\"specialPrice\"\n                    onChange={props.functionCollection.extraDataChangeHandler} />\n                <ReactTooltip id=\"tip-specialprice\">\n                    A modifier added to the original price of the first 'cost' item.\n                </ReactTooltip>\n\n                <label data-tip data-for=\"tip-demand\">Price Multiplier: </label>\n                <input\n                    type=\"number\"\n                    value={props.data.extraData.demand}\n                    name=\"demand\"\n                    onChange={props.functionCollection.extraDataChangeHandler} />\n                <ReactTooltip id=\"tip-demand\">\n                    The price adjuster of the first 'cost' item based on demand. <br />\n                    Updated when a villager resupply.\n                </ReactTooltip>\n            </div>\n        </div>\n    )\n}\n\nfunction ItemIcon(props) {\n    let item_icon = findItemIcon(props.itemId);\n    let item_elem = item_icon && props.itemCount != 0 ? <img src={`data:image/png;base64, ${item_icon}`} /> : null;\n\n    let item_count = null;\n    if (props.itemCount) {\n        if (props.itemCount > 1) item_count = <div className=\"item-icon-count mc-font\">{props.itemCount}</div>\n        else if (props.itemCount < 0) item_count = <div className=\"item-icon-count item-icon-count-negative mc-font\">{props.itemCount}</div>\n    }\n\n    return (\n        <div className=\"item-icon\">{item_elem}{item_count}</div>\n    )\n}\n\nfunction ItemInfo(props) {\n    return (\n        <div className=\"item\">\n            <ItemIcon itemId={props.data.id} itemCount={props.data.count} />\n            <div>\n                <label>Id: </label>\n                <input\n                    type=\"text\"\n                    value={props.data.id}\n                    name=\"id\"\n                    placeholder=\"Item ID (no spaces, lowercase)\"\n                    onChange={props.onChange} />\n\n                <label>Count: </label>\n                <input\n                    type=\"number\"\n                    value={props.data.count}\n                    name=\"count\"\n                    placeholder=\"Count\"\n                    onChange={props.onChange} />\n\n                <label>Tag: </label>\n                <input\n                    type=\"text\"\n                    value={props.data.tag}\n                    name=\"tag\"\n                    placeholder=\"{itemtag: false}\"\n                    onChange={props.onChange} />\n            </div>\n\n        </div>\n    )\n}\n\nwindow.vo = vo;\n/**\n * To insert image from data:\n * <img src=\"data:image/png;base64, DATAHEREFROM.icon\"/>\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}